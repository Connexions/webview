// Styles for the contents of a page.
// This should **only** be imported inside a containing selector like:
//
//     #content { @import 'this_file.less'; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 1.5rem 0 1rem 0;
  font-weight: bold;
}

ul, ol {
  margin-top: 1rem;
  margin-bottom: 0;
  color: @gray;
}

// It is already displayed at the top of the page in blue
// the `>` is because collated titles (like Key Concepts) contain descendent
// document-title elements.
[data-type="page"],
[data-type="composite-page"] {
  > [data-type="document-title"] { display: none; }
}

> section,
> figure,
> [data-type="glossary"],
> [data-type="footnote-refs"] {
  margin-top: 6rem;

  > ol > li::before {
    content: "" !important;
  }
}

.splash {
  margin-top: 0;
  &:not([data-orient="vertical"]) {
    display: block;
    img {
      width: 100%;
    }
  }
}

.os-figure {
  display: table;
  margin: 3rem auto;
  .os-caption-container {
    padding-top: 1rem;
    display: table-caption;
    caption-side: bottom;
    font-size: 1.2rem;
    color: @gray;
    .os-title-label {
      font-weight: bold;
    }
    .os-number {
      font-weight: bold;
    }
  }

figure {

  // Subfigures
  > figure {
    &.ui-has-child-figcaption > figcaption::before {
      //font-weight: bold;
      //content: counter(figure) counter(subfigure,lower-alpha) ': ';
    }

    &:not(.ui-has-child-figcaption)::after {
      //content: '(' counter(subfigure,lower-alpha) ')';
     }
    }
  }
}


// By default, figures are laid out horizontally
// unless they have the data-orient="vertical" attribute.
figure:not([data-orient="vertical"]) {
}


// --------------------------------
// Blockish things (note, example, exercise)
// --------------------------------

// Slots for various blockish pieces of content (things with a label, title, and body)
// This **ONLY** contains rules, no selectors.
#blockish {
.style(note) {
  margin: 3rem 0;
  padding: 1.5rem 1.5rem 1.5rem 1.5rem;
  background-color: @gray-lightest;
  border: 0.1rem solid @gray-lighter;

  > p {
    margin-top: 0;
  }
}
.title(note) {
  color: @gray;
  font-size: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  display: block;
  margin-bottom: 1rem;
  margin-top: 0;
  padding: 0rem 1.5rem 1rem 1.5rem;
  border-bottom: 0.1rem solid @gray-lighter;
}
.body(note) {
  border-top: none;
  padding: 0rem 1.5rem;
  background-color: @gray-lightest;

  p {
    margin: 0 0 1rem;
  }

  ul {
    color: @gray;
  }
}
.style(example) { .style(note) }
.title(example) { .title(note) }
.body(example) { .body(note) }
}

// TODO refactor this
h1.example-title .text {
  padding-left: 1rem;
}
// Skeleton for constructing the blockish elements
// This contains all the selectors for the styling

// Helper mixin for expanding all the selectors
.make-block(@type) {
  #blockish>.style(@type);

  // There are 3 cases for a label:
  // - none   : The attribute is not on the element so show the default label
  // - empty  : The attribute is present and it is the empty string; the default label should be suppressed
  // - custom : The attribute contains a custom string that should be displayed instead of the default label

  // Puts in the text of the label. Depending on if there is a title
  // it will be added either as a `:before` on the blockish element or on the title element
  .format-label(@type; @label-type; @has-title) { }
  .format-label(@type; none;        false) { #blockish>.default-label(@type; false); }
  .format-label(@type; empty;       false) { } // Nothing will show up
  .format-label(@type; custom;      false) { content: attr(data-label); }
  .format-label(@type; none;        true)  { #blockish>.default-label(@type; true); }
  .format-label(@type; empty;       true)  { } // Only the title will show up
  .format-label(@type; custom;      true)  { content: attr(data-label-parent) ': '; }

  // Add the label to the title element (if one exists) or to the blockish element
  .place-label(@type; @label-type) {
    // A title exists so style it and put the label in `.title::before`
    // FIXME: Remove the following line.
    // Aloha and webview have slightly different places for the title
    &.ui-has-child-title > header > [data-type="title"],
    &.ui-has-child-title > [data-type="title"],
    &.ui-has-child-title > header > .title,
    &.ui-has-child-title > header > .os-title,
    &.ui-has-child-title > .title,
    &.ui-has-child-title .solution > section > [data-type="solution-title"] {
      #blockish>.title(@type);
      &::before { display: none; }
    }
  }

  // Decide which case of the label we are dealing with
  &:not([data-label])                 { .place-label(@type; none); }
  &[data-label='']                    { .place-label(@type; empty); }
  &[data-label]:not([data-label=''])  { .place-label(@type; custom); }

  // Style the Body
  > section         { #blockish>.body(@type); }
}
.exercise-number() {
  font-weight: bold;
  text-decoration: none;
}

[data-type="note"],
.note     { .make-block(note); }
[data-type="example"],
.example  { .make-block(example); }
[data-type="abstract"],
.abstract { .make-block(note); }
[data-type="problem"],
[data-type="solution"],
.problem,
.solution {
  padding: 0;
}
[data-type="solution"],
.solution {
  border-top: 0.1rem solid @gray-lighter;

  section p,
  section ul,
  section ol,
  section .os-table {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

// Tables
// --------------------------------------------------
.os-table {
  table {
     margin: @line-height-computed 0;
  }
  .os-caption-container {
    .os-title-label,
    .os-number {
      font-weight: bold;
      display: inline-block;
      padding-right: 0.25em;
    }
    .os-caption {
      display: inline-block;
    }
  }
}

//
// End of Chapter/End of Book
// --------------------------------------------------
.os-eoc,
.os-eob {
  h2[data-type="document-title"],
  h2.os-title {
    font-size: 2.1rem;
    font-weight: bold;
  }
  .os-number {
    padding-right: 0;
    font-weight: bold;
    text-decoration: none;
  }

  .group-by .os-index-item {
    &:not(:first-of-type) {
      margin-top: 0.5rem;
    }
    .os-term {
      font-weight: bold;
      padding-right: 0.5rem;
    }
  }

  .group-label {
    display: block;
    font-size: 2.1rem;
    font-weight: bold;
    margin: 1.5rem 0 1rem 0;
  }
}
.os-eoc [data-type="exercise"],
.os-eoc .exercise {
  span {
    font-weight: bold;
    padding-right: 0.5rem
  }
  p { display: inline; }
  [data-type="problem"] > .number {
    .exercise-number();
  }
}

.os-solutions-container {
  // TODO: Fix this selector; it should be similar to the problem number one
  [data-type="solution"] {
    padding: 0.5em 0.25em 0.5em 0;
    display: inline;
    > a /*> .number*/ {
      .exercise-number();
    }
    p {
      display: inline;
      &::before {
        content: " ";
      }
    }
  }
}

.appendix [data-type="list"] {
  margin-top: 1rem;
}
